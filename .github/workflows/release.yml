name: Release

on:
  push:
    branches:
      - main

permissions: {}

jobs:
  detect-release:
    name: Detect release commit
    if: github.repository == 'devunt/mearie'
    runs-on: ubuntu-latest
    outputs:
      is_release: ${{ steps.check.outputs.is_release }}
      native_updated: ${{ steps.check.outputs.native_updated }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Check if this is a release commit
        id: check
        run: |
          commit_msg=$(git log -1 --pretty=%s)

          if echo "$commit_msg" | grep -q "^chore(release): version packages"; then
            echo "is_release=true" >> $GITHUB_OUTPUT
            echo "Release commit detected"

            if git diff HEAD^ HEAD --name-only | grep -q "crates/native/package.json"; then
              echo "native_updated=true" >> $GITHUB_OUTPUT
              echo "Native package updated"
            else
              echo "native_updated=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "is_release=false" >> $GITHUB_OUTPUT
            echo "native_updated=false" >> $GITHUB_OUTPUT
            echo "Regular commit, not a release"
          fi

  build-native:
    name: Build native binaries
    if: needs.detect-release.outputs.native_updated == 'true'
    needs: detect-release
    permissions:
      contents: read
    uses: ./.github/workflows/build-native.yml

  publish:
    name: Version or publish packages
    if: |
      github.repository == 'devunt/mearie' &&
      always() &&
      (needs.build-native.result == 'success' || needs.build-native.result == 'skipped')
    needs: [detect-release, build-native]
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 24.x
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        if: needs.detect-release.outputs.is_release == 'true'
        run: pnpm build

      - name: Prepare publish
        if: needs.detect-release.outputs.is_release == 'true'
        run: pnpm publish:prepare

      - name: Download native artifacts
        if: needs.detect-release.outputs.native_updated == 'true'
        uses: actions/download-artifact@v5
        with:
          path: crates/native/artifacts

      - name: Publish native artifacts
        if: needs.detect-release.outputs.native_updated == 'true'
        working-directory: crates/native
        run: pnpm napi:publish

      - name: Create version PR or publish packages
        uses: changesets/action@v1
        with:
          version: pnpm changeset:version
          publish: pnpm changeset:publish
          title: "chore(release): version packages"
          commit: "chore(release): version packages"
          commitMode: "github-api"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
